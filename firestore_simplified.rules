rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Simple authentication check
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    // Users collection - stores patient profiles
    match /users/{userId} {
      allow read, write: if isAuthenticated() && isOwner(userId);
    }
    
    // Professional collection - stores professional profiles
    match /professional/{userId} {
      allow read, write: if isAuthenticated() && isOwner(userId);
    }
    
    // Emergency requests collection - SIMPLIFIED RULES
    match /emergency_requests/{requestId} {
      // Allow ALL authenticated users to read emergency requests
      // This removes the complex role checking that might be failing
      allow read: if isAuthenticated();
      
      // Allow authenticated users to create requests
      allow create: if isAuthenticated() && 
        request.resource.data.patientId == request.auth.uid &&
        request.resource.data.status == 'pending';
      
      // Allow authenticated users to update requests
      // This allows drivers to accept/decline without complex role verification
      allow update: if isAuthenticated();
    }
    
    // Route clearances collection
    match /route_clearances/{clearanceId} {
      allow read, write: if isAuthenticated();
    }
    
    // Hospitals collection
    match /hospitals/{hospitalId} {
      allow read, write: if isAuthenticated();
    }
    
    // Analytics collection
    match /analytics/{analyticsId} {
      allow read, write: if isAuthenticated();
    }
    
    // Ambulance locations collection
    match /ambulance_locations/{ambulanceId} {
      allow read, write: if isAuthenticated();
    }
    
    // Ambulance routes collection
    match /ambulance_routes/{ambulanceId} {
      allow read, write: if isAuthenticated();
    }
    
    // Notifications collection
    match /notifications/{userId} {
      allow read, write: if isAuthenticated() && isOwner(userId);
      
      match /user_notifications/{notificationId} {
        allow read, write: if isAuthenticated() && isOwner(userId);
      }
    }
    
    // System notifications collection
    match /system_notifications/{notificationId} {
      allow read, write: if isAuthenticated();
    }
  }
}
