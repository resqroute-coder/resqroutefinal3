rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Simple authentication-based rules that support both patients and professionals
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    // Users collection - stores patient profiles
    match /users/{userId} {
      // Allow authenticated users to read/write their own documents only
      allow read, write: if isAuthenticated() && isOwner(userId);
    }
    
    // Professional collection - stores professional profiles keyed by Auth UID
    match /professional/{userId} {
      // Allow authenticated users to read/write their own documents only
      allow read, write: if isAuthenticated() && isOwner(userId);
    }
    
    // Emergency requests collection
    match /emergency_requests/{requestId} {
      // Allow all authenticated users to read requests (patients and professionals)
      allow read: if isAuthenticated();
      
      // Only a patient (the logged-in user) can create their own request
      allow create: if isAuthenticated() && 
        request.resource.data.patientId == request.auth.uid &&
        request.resource.data.keys().hasAll(['patientId', 'emergencyType', 'severity', 'location', 'status']) &&
        request.resource.data.status == 'pending';
      
      // Only the owning patient can update their request (keeps behavior simple and safe)
      allow update: if isAuthenticated() && 
        resource.data.patientId == request.auth.uid;
    }
  }
}
